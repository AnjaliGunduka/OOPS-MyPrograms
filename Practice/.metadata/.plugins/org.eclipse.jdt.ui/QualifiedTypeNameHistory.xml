<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="com.example.demo.response.StudentResponse"/>
    <fullyQualifiedTypeName name="com.example.demo.response.UserResponse"/>
    <fullyQualifiedTypeName name="com.example.demo.exception.BadRequestException"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.Jwts"/>
    <fullyQualifiedTypeName name="java.util.Base64"/>
    <fullyQualifiedTypeName name="com.example.demo.repository.AuthenticationDetailsRepository"/>
    <fullyQualifiedTypeName name="com.example.demo.entity.AuthenticationDetails"/>
    <fullyQualifiedTypeName name="com.example.demo.response.ApiResponse"/>
    <fullyQualifiedTypeName name="com.example.demo.model.TokenPayLoadDetails"/>
    <fullyQualifiedTypeName name="com.example.demo.constants.Constants"/>
    <fullyQualifiedTypeName name="com.example.demo.exception.UnauthorizedException"/>
    <fullyQualifiedTypeName name="org.bson.internal.Base64"/>
    <fullyQualifiedTypeName name="org.apache.tomcat.util.codec.binary.Base64"/>
    <fullyQualifiedTypeName name="com.example.demo.annotation.EnableTokenAuthorisation"/>
    <fullyQualifiedTypeName name="com.example.demo.repository.LoginCredentialsRepository"/>
    <fullyQualifiedTypeName name="com.example.demo.exception.RecordNotfoundException"/>
    <fullyQualifiedTypeName name="com.example.demo.response.LoginResponse"/>
    <fullyQualifiedTypeName name="com.example.demo.request.LoginRequest"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.password.PasswordEncoder"/>
    <fullyQualifiedTypeName name="com.example.demo.service.UserService"/>
    <fullyQualifiedTypeName name="com.example.demo.service.JwtAuthenticationService"/>
    <fullyQualifiedTypeName name="com.example.demo.enums.Status"/>
    <fullyQualifiedTypeName name="com.example.demo.entity.LoginCredentials"/>
    <fullyQualifiedTypeName name="com.example.demo.entity.User"/>
    <fullyQualifiedTypeName name="com.example.demo.entity.Users"/>
    <fullyQualifiedTypeName name="com.example.demo.common.Constants"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.provider.endpoint.TokenEndpoint"/>
    <fullyQualifiedTypeName name="java.util.Arrays"/>
    <fullyQualifiedTypeName name="io.swagger.v3.oas.annotations.security.SecurityScheme"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="springfox.documentation.service.TokenEndpoint"/>
    <fullyQualifiedTypeName name="springfox.documentation.builders.AuthorizationCodeGrantBuilder"/>
    <fullyQualifiedTypeName name="springfox.documentation.service.GrantType"/>
    <fullyQualifiedTypeName name="springfox.documentation.builders.OAuthBuilder"/>
    <fullyQualifiedTypeName name="springfox.documentation.service.SecurityScheme"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.context.SecurityContext"/>
    <fullyQualifiedTypeName name="javax.persistence.Enumerated"/>
    <fullyQualifiedTypeName name="javax.persistence.EnumType"/>
    <fullyQualifiedTypeName name="com.example.demo.enums.Role"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="java.util.stream.Stream"/>
    <fullyQualifiedTypeName name="java.util.stream.Collectors"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.config.server.EnableConfigServer"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.loadbalancer.LoadBalanced"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.ribbon.RibbonClient"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.ribbon.RibbonClientConfiguration"/>
    <fullyQualifiedTypeName name="com.netflix.client.config.IClientConfig"/>
    <fullyQualifiedTypeName name="com.netflix.loadbalancer.IPing"/>
    <fullyQualifiedTypeName name="com.netflix.loadbalancer.PingUrl"/>
    <fullyQualifiedTypeName name="com.netflix.loadbalancer.IRule"/>
    <fullyQualifiedTypeName name="com.netflix.loadbalancer.AvailabilityFilteringRule"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
</qualifiedTypeNameHistroy>
