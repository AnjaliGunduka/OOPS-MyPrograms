package com.library.service.book.entity;

import com.library.service.book.enums.Status;
import com.speedment.jpastreamer.field.ComparableField;
import com.speedment.jpastreamer.field.EnumField;
import com.speedment.jpastreamer.field.IntField;
import com.speedment.jpastreamer.field.StringField;

/**
 * The generated base for entity {@link Book} representing entities of the
 * {@code book}-table in the database.
 * <p> This file has been automatically generated by JPAStreamer.
 * 
 * @author JPAStreamer
 */
public final class Book$ {
    
    /**
     * This Field corresponds to the {@link Book} field bookName.
     */
    public static final StringField<Book> bookName = StringField.create(
        Book.class,
        "bookName",
        Book::getBookName,
        false
    );
    /**
     * This Field corresponds to the {@link Book} field author.
     */
    public static final StringField<Book> author = StringField.create(
        Book.class,
        "author",
        Book::getAuthor,
        false
    );
    /**
     * This Field corresponds to the {@link Book} field edition.
     */
    public static final StringField<Book> edition = StringField.create(
        Book.class,
        "edition",
        Book::getEdition,
        false
    );
    /**
     * This Field corresponds to the {@link Book} field status.
     */
    public static final EnumField<Book, Status> status = EnumField.create(
        Book.class,
        "status",
        Book::getStatus,
        Status.class
    );
    /**
     * This Field corresponds to the {@link Book} field categoryName.
     */
    public static final StringField<Book> categoryName = StringField.create(
        Book.class,
        "categoryName",
        Book::getCategoryName,
        false
    );
    /**
     * This Field corresponds to the {@link Book} field publisher.
     */
    public static final StringField<Book> publisher = StringField.create(
        Book.class,
        "publisher",
        Book::getPublisher,
        false
    );
    /**
     * This Field corresponds to the {@link Book} field id.
     */
    public static final ComparableField<Book, Long> id = ComparableField.create(
        Book.class,
        "id",
        Book::getId,
        false
    );
    /**
     * This Field corresponds to the {@link Book} field numberOfCopies.
     */
    public static final IntField<Book> numberOfCopies = IntField.create(
        Book.class,
        "numberOfCopies",
        Book::getNumberOfCopies,
        false
    );
}