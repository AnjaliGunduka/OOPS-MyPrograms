package com.payment.streams;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.times;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

import java.util.stream.Collectors;
import java.util.stream.Stream;

import org.junit.jupiter.api.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.test.context.junit4.SpringRunner;

import com.payment.streams.model.User;
import com.payment.streams.repo.UserRepository;
import com.payment.streams.service.UserService;

@RunWith(SpringRunner.class)
@SpringBootTest
class JpastreamerExampleApplicationTests {

	@Test
	void contextLoads() {
	}

	@Autowired
	private UserService service;

	@MockBean
	private UserRepository repository;

	@Test
	public void getUsersTest() {
		when(repository.findAll())
				.thenReturn(Stream.of(new User(1L, "anju", "g", "anjali@")).collect(Collectors.toList()));
		assertEquals(1, service.findAll().size());
	}

	@Test
	public void getUserbyNameTest() {
		String name = "A";
		when(repository.findByName(name))
				.thenReturn(Stream.of(new User(1L, "anju", "anju", "anjali@")).collect(Collectors.toList()));
		assertEquals(1, service.findByName(name).size());
	}
	
	@Test
	public void saveUserTest() {
		User user = new User(1L, "anjali", "anju", "anjali@");
		when(repository.save(user)).thenReturn(user);
		assertEquals(user, service.saveUser(user));
	}
	@Test
	public void deleteUserTest() {
		User user = new User(1L, "anjali", "anju", "anjali@");
		service.deleteUser(user);
		verify(repository, times(1)).delete(user);
	}

}
