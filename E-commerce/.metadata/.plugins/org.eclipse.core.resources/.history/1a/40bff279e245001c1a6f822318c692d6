package com.payment.streams;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;

import java.util.stream.Collectors;
import java.util.stream.Stream;

import org.junit.jupiter.api.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.test.context.junit4.SpringRunner;

import com.payment.streams.model.User;
import com.payment.streams.repo.UserRepository;
import com.payment.streams.service.UserService;

@RunWith(SpringRunner.class)
@SpringBootTest
class JpastreamerExampleApplicationTests {

	@Test
	void contextLoads() {
	}
	@Autowired
	private UserService service;

	@MockBean
	private UserRepository repository;
	@Test
	public void getUsersTest() {
		when(repository.findAll()).thenReturn(Stream
				.of(new User(1L, "Anjali","g", "USA")).collect(Collectors.toList()));
		assertEquals(1, service.findAll().size());
	}
	
	@Test
	public void getUserbyAddressTest() {
		Long id = 2L;
		when(repository.findById(id))
				.thenReturn(Optional.of(Stream.of(new User(2L, "Danile", "Anju", "USA")).collect(Collectors.toList())));
		assertEquals(1, service.findById(id).size());
	}

	
	
	
}
